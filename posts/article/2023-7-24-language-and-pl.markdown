---
layout:     post
title:      语言、编程语言与语言环境
intro:   ""
date:       2023-7-24 18:30:00
author:     "Mahiru"
catalog: true
tags:
    - 工程开发
---

在学习一门语言的时候，也许大多数人都听过老师教导我们，学习语言的关键不在于死记硬背，只停留于书本上的知识或盲目刷那些课外练习题，要学会地道的表达，只有一个办法，那就是沉浸到对应的语言环境。

为什么相比于长期生活在国内的学生，留学生能够更加顺畅地理解和表达外语？因为他们处于一个完全沉浸的语言环境中，每天他们都必须依赖于理解并应用这门语言来交流和学习，所以他们自然也逐渐掌握了对这门语言运用自如。

但是今天我想要谈论的不是语言，而是编程语言，我认为编程语言也是类似的道理，只有多用编程语言解决问题，才可能获得长足的进步。

在我开始做前端项目的开发之前，我曾经学过 C++ 和 Java，但是却没有用它们写过一个完整的项目。使用 C++ 的大部分情况是在刷算法题，而 Java 方面，则只是看教材、写了点示例代码罢了。因此，我只能说我学过这两门编程语言，但是却不能说学会、甚至用过。

在用 JavaScript 和 TypeScript 生态写过一些项目后，我才逐渐意识到，学习一门编程语言和在项目中把它用起来，是截然不同的两个概念。只有真正尝试去在一个工程中使用一门编程语言，才能逐渐了解到这门编程语言所配套的开发环境、第三方库的生态、如何在开发完成后构建和发布自己的项目，如何让自己的软件或库，可以交给其他人使用。在这个过程中，可能会遇到一些情况，让人觉得这门编程语言很垃圾或者让人觉得这门编程语言设计的不错的地方，而不是一味听编程语言的发明者和教材吹嘘。

后来，我又想要进一步学习函数式编程，所以我尝试过 Haskell，也尝试过 Rust，但是由于缺乏用它们做一个项目的热情，所以最后也双双烂尾了。所以，是否能真正学好并用好一门编程语言，兴趣和热情，也是很重要的吧！