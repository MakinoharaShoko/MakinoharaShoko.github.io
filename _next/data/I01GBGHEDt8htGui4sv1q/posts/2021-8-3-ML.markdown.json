{"pageProps":{"post":"---\nlayout:     post\ntitle:      机器学习\nintro:   \"\"\ndate:       2021-8-3 12:00:01\nauthor:     \"Makinohara\"\ncatalog: true\ntags:\n    - 科研应用\n    \n---\n\n# 入门\n\n机器学习的基本方法：任务T在得到经验E后提高性能度量P\n\n## 监督学习\n\n监督学习：找正确答案\n\n1、回归问题：找函数，预测连续值\n\n2、分类问题：预测离散值\n\n## 无监督学习\n\n无监督学习：自己找数据的结构和规律（并不提前给出正确答案）\n\n聚类算法：将不同的内容整合为几个集合\n\n## 神经网络\n\n神经网络是一个可以学习模式的函数集合。\n\n## 卷积\n\n通过某种方式处理图像，使之呈现出某种特征\n\n## 池化\n\n处理图像的一种方式，取某些像素的最大、平均值或其他特征值\n\n# TensorFlow\n\n### 实例1：图像分类\n\n```python\nimport tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#回调，当准确度达到80%时停止训练\nclass callBack(tf.keras.callbacks.Callback):\n    def on_epoch_end(self, epoch, logs={}):\n        if(logs.get('loss')<0.2):\n            print('\\nReached 80%')\n            self.model.stop_training = True\ncb1 = callBack()\n\n#导入Fashion数据集\nmnist = tf.keras.datasets.fashion_mnist\n(training_images, training_labels), (test_images, test_labels) = mnist.load_data()\n\n#这里的没什么用\nplt.imshow(training_images[0])\nprint(training_images[0])\nprint((training_labels[0]))\n\n#将像素0-255表示转为更容易处理的0-1表示\ntraining_images = training_images/255\ntest_images = test_images/255\n\n#升维，以便卷积\ntraining_images = np.expand_dims(training_images, axis=3)\ntest_images = np.expand_dims(test_images, axis=3)\n\n#神经网络\nmodel = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(64,(3,3),activation='relu',input_shape=(28,28,1)),#卷积1\n    tf.keras.layers.MaxPooling2D(2,2),#最大池化\n    tf.keras.layers.Conv2D(64,(3,3),activation='relu'),#卷积2\n    tf.keras.layers.MaxPooling2D(2,2),#最大池化\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(256,activation=tf.nn.relu),#全连接层\n    tf.keras.layers.Dense(10,activation=tf.nn.softmax)]\n)\n\n#训练\nmodel.compile(optimizer=tf.optimizers.Adam(),\n              loss='sparse_categorical_crossentropy')\nmodel.summary()\nmodel.fit(training_images,training_labels,epochs=15,\n          callbacks=[cb1]\n          )\n\n#评估结果\nmodel.evaluate(test_images,test_labels)\n```\n\n"},"__N_SSG":true}