{"pageProps":{"post":"---\nlayout:     post\ntitle:      WASM Rust 踩坑记（附完整解决方法\nintro:   \"\"\ndate:       2022-4-6 23:00:00\nauthor:     \"Mahiru\"\ncatalog: true\ntags:\n    - 工程开发\n---\n\n## 从零开始的WASM踩坑\n\n在这个风和日丽、阳光明媚的下午，我参照教程 https://developer.mozilla.org/zh-CN/docs/WebAssembly/Rust_to_wasm 开始编写第一个`WASM`程序。\n\n由于已经配置好了 Rust 环境，所以我预期一切正常，只需要半小时就能拿下战斗。但是在安装 Wasm 环境的时候，就遇到了第一个坑：Cargo 的源是 GitHub 源，国内用不了啊。\n\n不过这种换源问题怎么能难得倒我们呢？开换！\n\nhttps://mirrors.gitcode.host/zzy/rust-crate-guide/4-cargo/4.1-source-replacement.html\n\n换好源之后，就开始愉快地安装环节\n\n```shell\ncargo install wasm-pack\n```\n\n然后就来到了喜闻乐见的报错环节\n\n```shell\nerror: failed to run custom build command for `openssl-sys v0.9.55`\n```\n\n于是安装 OpenSSL，并配置环境变量，然后没卵用......\n\n**找了很多方案，最终选择直接下载编译好的安装包，简单粗暴。（如果你遇到了和我一样的问题，直接看这个**\n\n> 解决方案： https://stackoverflow.com/questions/68646684/cant-install-cargo-wasm-pack\n>\n> 下载地址： https://rustwasm.github.io/wasm-pack/installer/# \n\n然后就按照教程继续做，准备构建的时候发现了一个问题，`wasm-bindgen`的版本号对不上\n\n改为0.2.79后解决问题。\n\n```toml\n[package]\nname = \"hello-wasm\"\nversion = \"0.1.0\"\nauthors = [\"Mahiru_@outlook.com\"]\ndescription = \"A sample project with wasm-pack\"\nlicense = \"MIT/Apache-2.0\"\nrepository = \"https://github.com/yourgithubusername/hello-wasm\"\n\n[lib]\ncrate-type = [\"cdylib\"]\n\n[dependencies]\nwasm-bindgen = \"0.2.79\"\n```\n\n根据 MDN 的教程，你应该运行这个编译指令：\n\n```shell\n$ wasm-pack build --scope mynpmusername\n```\n\n然后你就错了，然后遇到这个报错\n\n```\nFailed to load module script: The server responded with a non-JavaScript MIME type of \"application/wasm\". Strict MIME type checking is enforced for module scripts per HTML spec.\n```\n\n> 参考： https://stackoverflow.com/questions/64308461/failed-to-load-wasm-application\n\n你应该运行的是这个指令，以指定编译目标：\n\n```shell\nwasm-pack build --release --target web\n```\n\n**你以为这就完了吗？**\n\n接下来，当我试图在 JS 代码中引入 `WASM`的时候，发现了新的问题。\n\nMDN 提供的代码是这样的：\n\n```js\nconst js = import(\"./node_modules/@yournpmusername/hello-wasm/hello_wasm.js\");\njs.then(js => {\n  js.greet(\"WebAssembly\");\n});\n\n```\n\n这段代码屁有没有，然后你会收获一个报错：\n\n```\nUncaught (in promise) TypeError: Cannot read properties of undefined (reading '__wbindgen_malloc')\n```\n\n**正确的代码是：**\n\n```js\nimport init from './pkg/hello_wasm.js';\nimport {greet} from './pkg/hello_wasm.js';\n\nfunction run() {\n    // use the function ex_function1 here\n    greet('123')\n}\n\ninit().then(run)\n```\n\n> 参考： https://stackoverflow.com/questions/64308461/failed-to-load-wasm-application\n\n然后你创建的一个 HTML 文档，并粘贴了 MDN 给的示例：\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>hello-wasm example</title>\n  </head>\n  <body>\n    <script src=\"./index.js\"></script>\n  </body>\n</html>\n```\n\n**又错了！！！！！！**\n\n```\nUncaught SyntaxError: Cannot use import statement outside a module\n```\n\n不过这个问题就很简单了，加上 `type=\"module\"` 就可以了。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>hello-wasm example</title>\n</head>\n<body>\n<script type=\"module\" src=\"./index.js\"></script>\n</body>\n</html>\n```\n\n最后，你成功运行了自己的第一个用 Rust 编写的 `WASM` 代码，可喜可贺。啪啪啪啪啪啪（鼓掌\n\n## 完整的示例代码，请看：\n\nhttps://github.com/MakinoharaShoko/Learning-Code/tree/main/Rust/hello-wasm （RUST）\n\nhttps://github.com/MakinoharaShoko/Learning-Code/tree/main/Wasm/WASM_Test_1 （WASM 网页）\n"},"__N_SSG":true}