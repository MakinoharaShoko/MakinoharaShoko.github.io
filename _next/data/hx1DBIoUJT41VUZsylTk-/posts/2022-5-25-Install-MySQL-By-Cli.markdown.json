{"pageProps":{"post":"---\nlayout:     post\ntitle:      MySQL installation by CLI\nintro:   \"\"\ndate:       2022-5-25 23:30:00\nauthor:     \"Mahiru\"\ncatalog: true\ntags:\n    - 工程开发\n---\n\n## 命令行安装 MySQL\n\n### 配置环境变量\n\n#### 新建变量\n\n```\n变量名：MYSQL_HOME\n\n值：安装路径\n```\n\n#### 添加PATH路径\n\n```\n%MYSQL_HOME%\\bin\n```\n\n### 安装MySQL\n\n#### 初始化并记录初始化密码\n\n```shell\nmysqld --initialize --console\n```\n\n#### 将MySQL安装为Windows的服务\n\n```shell\nmysqld -install\n```\n\n#### 启动MySQL\n\n```shell\nnet start MySQL\n```\n\n#### 登陆数据库，并输入前面记录的临时密码\n\n```shell\nmysql -u root -p\n```\n\n#### 修改自己的密码：123456  ,命令一定要包括分号\n\n```mysql\nalter user 'root'@'localhost' identified by '123456';\nalter user 'root'@'localhost' identified with mysql_native_password by '123456';  \n```\n\n#### 最后提交 \n\n```mysql\ncommit;\n```\n\n## 补充：删除MySQL\n\n```shell\nnet stop mysql\nmysqld -remove\n```\n\n## 补充：连接MySQL\n\n### SpringBoot\n\n```properties\n#MYSQL链接\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://localhost:3306[(可选)/database]?serverTimezone=UTC\nspring.datasource.username=root\nspring.datasource.password=123456\n```\n\n### NestJS\n\n#### 引入包\n\n```\nyarn add @nestjs/typeorm typeorm mysql2\n```\n\n#### 导入到`app.module.ts`\n\n```typescript\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'root',\n      database: 'test',\n      entities: [],\n      synchronize: true,\n    }),\n  ],\n})\nexport class AppModule {}\n\n```\n\n另外，我们可以创建 `ormconfig.json` ，而不是将配置对象传递给 `forRoot()`。\n\n```bash\n{\n  \"type\": \"mysql\",\n  \"host\": \"localhost\",\n  \"port\": 3306,\n  \"username\": \"root\",\n  \"password\": \"root\",\n  \"database\": \"test\",\n  \"entities\": [\"dist/**/*.entity{.ts,.js}\"],\n  \"synchronize\": true\n}\n```\n\n然后，我们可以不带任何选项地调用 `forRoot()` :\n\n> app.module.ts\n\n```typescript\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forRoot()],\n})\nexport class AppModule {}\n```\n"},"__N_SSG":true}