{"pageProps":{"post":"---\nlayout:     post\ntitle:      Webpack 搭建 React + TS 环境\nintro:   \"\"\ndate:       2022-5-29 18:30:00\nauthor:     \"Mahiru\"\ncatalog: true\ntags:\n    - 工程开发\n---\n\n# Webpack 基础配置\n\n## 初始化，安装依赖\n最终得到：\n`package.json`\n```json\n{\n  \"name\": \"webpack\",\n  \"version\": \"1.0.0\",\n  \"main\": \"src/main.tsx\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"build\": \"webpack --config webpack.prod.js\",\n    \"dev\": \"webpack serve --open --config webpack.dev.js\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.18.2\",\n    \"@babel/preset-env\": \"^7.18.2\",\n    \"babel-loader\": \"^8.2.5\",\n    \"clean-webpack-plugin\": \"^4.0.0\",\n    \"css-loader\": \"^6.7.1\",\n    \"html-webpack-plugin\": \"^5.5.0\",\n    \"mini-css-extract-plugin\": \"^2.6.0\",\n    \"ts-loader\": \"^9.3.0\",\n    \"typescript\": \"^4.7.2\",\n    \"webpack\": \"^5.72.1\",\n    \"webpack-cli\": \"^4.9.2\",\n    \"webpack-dev-server\": \"^4.9.0\",\n    \"webpack-merge\": \"^5.8.0\"\n  },\n  \"dependencies\": {\n    \"@types/react\": \"^18.0.9\",\n    \"@types/react-dom\": \"^18.0.5\",\n    \"react\": \"^18.1.0\",\n    \"react-dom\": \"^18.1.0\"\n  }\n}\n```\n\n## 编写 `webpack.common.js` 作为主要配置文件\n```js\nconst path = require('path');\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst {CleanWebpackPlugin} = require(\"clean-webpack-plugin\");\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\n\n// 生成随机字符串，用于区分打包产物\nconst bundle_random_str = Math.random().toString(36).slice(-6);\n\nmodule.exports = {\n    // 入口\n    entry: {\n        index: './src/main.tsx'\n    },\n    // 出口\n    output: {\n        path: path.resolve(__dirname, './dist'),\n        filename: `assets/[name].${bundle_random_str}.bundle.js`,\n    },\n    // 对于各个模块的规则\n    module: {\n        rules: [\n            // JavaScript\n            {\n                test: /\\.m?js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: 'babel-loader',\n                    options: {\n                        presets: ['@babel/preset-env'],\n                    },\n                },\n            },\n            // css\n            {\n                test: /\\.css$/,\n                use: [MiniCssExtractPlugin.loader, 'css-loader']\n            },\n            // ts\n            {\n                test: /\\.tsx?$/,\n                use: 'ts-loader',\n                exclude: /node_modules/,\n            },\n        ]\n    },\n    plugins: [\n        // 打包前清理\n        new CleanWebpackPlugin(),\n        // 打包时处理HTML\n        new HtmlWebpackPlugin({\n            title: 'Webpack Test',\n            template: path.resolve(__dirname, './public/index.html'),\n            filename: 'index.html',\n        }),\n        // 打包成css\n        new MiniCssExtractPlugin({\n            filename: `assets/style.${bundle_random_str}.css`\n        }),\n    ],\n    resolve: {\n        extensions: ['.js', '.jsx', '.ts', '.tsx']\n    }\n}\n```\n\n### 在index中引入 Webpack 变量的方法\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title><%= htmlWebpackPlugin.options.title %></title>\n</head>\n<body>\n<div id=\"root\"></div>\n</body>\n</html>\n\n```\n\n## 编写开发环境配置文件\n`webpack.dev.js`\n\n```js\nconst {merge} = require('webpack-merge');\nconst common = require('./webpack.common.js');\nconst path = require(\"path\");\n\nmodule.exports = merge(common, {\n    mode: 'development',\n    devtool: 'inline-source-map',\n    // 启用devServer\n    devServer: {\n        static: {\n            publicPath: path.join(__dirname, 'public')\n        },\n        hot: true,\n        compress: true,\n        port: 3000,\n    },\n});\n\n```\n\n## 编写生产环境配置文件\n`webpack.prod.js`\n```js\nconst {merge} = require('webpack-merge');\nconst common = require('./webpack.common.js');\n\nmodule.exports = merge(common, {\n    mode: 'production',\n});\n\n```\n\n# 配置 TS Babel\n\n## 配置TS\n`tsconfig.json`\n```json\n{\n  \"compilerOptions\": {\n    \"outDir\": \"./dist/\",\n    // \"rootDir\": \"./src\",\n    \"sourceMap\": true, // 开启sourcemap\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"jsx\": \"react\",\n    \"esModuleInterop\": true,\n    \"allowJs\": false,\n    \"strict\": true\n  }\n}\n\n```\n\n## 配置 Babel\n`babel.config.json`\n```json\n{\n    \"presets\": [\"@babel/preset-env\"]\n}\n```"},"__N_SSG":true}